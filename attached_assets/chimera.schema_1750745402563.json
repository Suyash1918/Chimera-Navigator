{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Project Chimera Schema",
  "description": "Enhanced schema for React/TypeScript component analysis with AST paths, hooks, and imports",
  "type": "object",
  "required": ["projectName", "rootDirectory", "tree"],
  "properties": {
    "projectName": {
      "type": "string",
      "description": "Name of the project",
      "minLength": 1
    },
    "rootDirectory": {
      "type": "string",
      "description": "Root directory path of the project",
      "minLength": 1
    },
    "tree": {
      "$ref": "#/definitions/TreeNode"
    }
  },
  "definitions": {
    "TreeNode": {
      "type": "object",
      "required": ["type", "name", "path"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["directory", "Component"]
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "path": {
          "type": "string",
          "minLength": 1
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TreeNode"
          }
        },
        "fileName": {
          "type": "string",
          "pattern": "\\.(jsx|tsx)$"
        },
        "imports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportDependency"
          }
        },
        "hooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReactHook"
          }
        },
        "definition": {
          "$ref": "#/definitions/ComponentDefinition"
        }
      },
      "if": {
        "properties": {
          "type": {
            "const": "Component"
          }
        }
      },
      "then": {
        "required": ["fileName", "definition"],
        "properties": {
          "imports": {
            "type": "array"
          },
          "hooks": {
            "type": "array"
          }
        }
      }
    },
    "ImportDependency": {
      "type": "object",
      "required": ["source", "specifiers", "isExternal"],
      "properties": {
        "source": {
          "type": "string",
          "minLength": 1,
          "description": "Import source path or package name"
        },
        "specifiers": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "minItems": 1,
          "description": "List of imported specifiers"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Whether this is a default import"
        },
        "isExternal": {
          "type": "boolean",
          "description": "Whether this is an external package import"
        },
        "usageCount": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of times this import is used"
        }
      }
    },
    "ReactHook": {
      "type": "object",
      "required": ["type", "astPath", "sourceLocation"],
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^use[A-Z].*",
          "description": "Hook name (must start with 'use')"
        },
        "astPath": {
          "type": "string",
          "pattern": "^/[A-Za-z][A-Za-z0-9_]*(\\[[A-Za-z0-9_.=\\[\\]]+\\])?(/[A-Za-z][A-Za-z0-9_]*(\\[[A-Za-z0-9_.=\\[\\]]+\\])?)*$",
          "description": "Universal AST path for precise targeting"
        },
        "sourceLocation": {
          "$ref": "#/definitions/SourceLocation"
        },
        "state": {
          "type": "string",
          "description": "State variable name (for useState)"
        },
        "setter": {
          "type": "string",
          "description": "State setter function name (for useState)"
        },
        "initialValue": {
          "description": "Initial value for state (for useState)"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Dependency array (for useEffect, useCallback, etc.)"
        }
      }
    },
    "ComponentDefinition": {
      "type": "object",
      "required": ["rootElementType", "elements"],
      "properties": {
        "rootElementType": {
          "type": "string",
          "minLength": 1,
          "description": "Type of the root JSX element"
        },
        "elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementDefinition"
          }
        }
      }
    },
    "ElementDefinition": {
      "type": "object",
      "required": ["astPath", "type", "sourceLocation"],
      "properties": {
        "astPath": {
          "type": "string",
          "pattern": "^/[A-Za-z][A-Za-z0-9_]*(\\[[A-Za-z0-9_.=\\[\\]]+\\])?(/[A-Za-z][A-Za-z0-9_]*(\\[[A-Za-z0-9_.=\\[\\]]+\\])?)*$",
          "description": "Universal AST path for precise element targeting"
        },
        "type": {
          "type": "string",
          "minLength": 1,
          "description": "Element type (JSX element name or component name)"
        },
        "sourceLocation": {
          "$ref": "#/definitions/SourceLocation"
        },
        "props": {
          "type": "object",
          "description": "Element props/attributes",
          "additionalProperties": true
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementDefinition"
          },
          "description": "Child elements"
        }
      }
    },
    "SourceLocation": {
      "type": "object",
      "required": ["startLine", "endLine"],
      "properties": {
        "startLine": {
          "type": "integer",
          "minimum": 1,
          "description": "Starting line number in source file"
        },
        "endLine": {
          "type": "integer",
          "minimum": 1,
          "description": "Ending line number in source file"
        }
      }
    }
  },
  "additionalProperties": false
}
